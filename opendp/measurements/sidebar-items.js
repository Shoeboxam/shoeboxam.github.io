window.SIDEBAR_ITEMS = {"fn":[["make_alp_histogram_post_process","Wrapper Measurement. See [`post_process`]."],["make_base_alp","Measurement to compute a DP projection of bounded sparse data. "],["make_base_alp_with_hashers","Measurement to compute a DP projection of bounded sparse data. "],["make_base_discrete_gaussian","Make a Measurement that adds noise from the discrete_gaussian(`scale`) distribution to the input."],["make_base_discrete_gaussian_rug",""],["make_base_discrete_laplace","Make a Measurement that adds noise from the discrete_laplace(`scale`) distribution to the input."],["make_base_discrete_laplace_cks20","Make a Measurement that adds noise from the discrete_laplace(`scale`) distribution to the input,  using an efficient algorithm on rational bignums."],["make_base_discrete_laplace_cks20_rug",""],["make_base_discrete_laplace_linear","Make a Measurement that adds noise from the discrete_laplace(`scale`) distribution to the input,  using a linear-time algorithm on finite data types."],["make_base_gaussian","Make a Measurement that adds noise from the gaussian(`scale`) distribution to the input."],["make_base_geometric","Deprecated.  Use `make_base_discrete_laplace` instead (more efficient).  `make_base_discrete_laplace_linear` has a similar interface with the optional constant-time bounds."],["make_base_laplace","Make a Measurement that adds noise from the laplace(`scale`) distribution to a scalar value."],["make_base_ptr","Make a Measurement that uses propose-test-release to privatize a hashmap of counts."],["make_randomized_response","Make a Measurement that implements randomized response on a categorical value."],["make_randomized_response_bool","Make a Measurement that implements randomized response on a boolean value."],["post_process","Wrap the AlpState in a Queryable object The Queryable object works similar to a dictionary Note that the access time is O(state.h.len())"]]};